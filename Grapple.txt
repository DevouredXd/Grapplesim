local player = game.Players.LocalPlayer

local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))();
local Window = OrionLib:MakeWindow({
    Name = "V.E.X. WARE",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest",
    Draggable = true,
    Resizable = true
})

local ToggleScriptsTab = Window:MakeTab({
    Name = "Toggle Scripts",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local ToggleScriptsSection = ToggleScriptsTab:AddSection({
    Name = "Scripts"
})

-- Function to toggle damage size
local function toggleDamageSize(isEnabled)
    if isEnabled then
        game.Workspace.Pit.Damage.Size = Vector3.new(2e100, 2e100, 2e100)
    else
        game.Workspace.Pit.Damage.Size = Vector3.new(0, 0, 0)
    end
end

local damageSizeEnabled = false
ToggleScriptsSection:AddButton({
    Name = "Toggle Damage Size",
    Callback = function()
        damageSizeEnabled = not damageSizeEnabled
        toggleDamageSize(damageSizeEnabled)
        ToggleScriptsSection:GetButton("Toggle Damage Size"):SetToggled(damageSizeEnabled)

        -- Macro function for damage size
        while damageSizeEnabled do
            toggleDamageSize(true)
            wait(0.05) -- Adjust delay as needed
        end
    end
})

-- Function to boost touch detector size
local function boostTouchDetectorSize(isEnabled)
    local touchDetector = game:GetService("Workspace").Map.Cool.Boosts.Jump.touchDetector
    touchDetector.Size = isEnabled and Vector3.new(4e14, 4e15, 4e13) or Vector3.new(1, 1, 1)
end

local boostEnabled = false
ToggleScriptsSection:AddButton({
    Name = "Boost Touch Detector Size",
    Callback = function()
        boostEnabled = not boostEnabled
        boostTouchDetectorSize(boostEnabled)
        ToggleScriptsSection:GetButton("Boost Touch Detector Size"):SetToggled(boostEnabled)
    end
})

-- Create the Loop Scripts Tab
local LoopScriptsTab = Window:MakeTab({
    Name = "Loop Scripts",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local LoopScriptsSection = LoopScriptsTab:AddSection({
    Name = "Scripts"
})

-- Function to wait with 1ms precision
local RunService = game:GetService("RunService")

local function waitForMilliseconds(ms)
    local targetTime = ms / 1000
    local start = tick()
    repeat
        RunService.Heartbeat:Wait()
    until tick() - start >= targetTime
end

-- Auto Push (simplified, no button)
LoopScriptsSection:AddButton({
    Name = "Auto Push",
    Callback = function()
        while true do
            if player.Character and player.Character:FindFirstChild("Push") then
                game:GetService("ReplicatedStorage").Events.Remote.Client.push:FireServer()
            end
            wait(0.05) -- Adjust the delay if needed
        end
    end
})

-- Grapple Pull 1 Button
LoopScriptsSection:AddButton({
    Name = "Grapple Pull",
    Callback = function()
        local isScriptEnabled = false
        
        local function toggleScript()
            isScriptEnabled = not isScriptEnabled
        end
        
        -- GUI Setup for Grapple Pull 1
        local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
        gui.ResetOnSpawn = false -- Prevents the UI from resetting on player death
        local window = Instance.new("Frame", gui)
        window.Size = UDim2.new(0, 200, 0, 100)
        window.Position = UDim2.new(0, 10, 0, 10)
        window.BackgroundColor3 = Color3.new(0, 0, 1)
        window.Active = true
        window.Draggable = true
        
        local toggleButton = Instance.new("TextButton", window)
        toggleButton.Size = UDim2.new(0, 100, 0, 50)
        toggleButton.Position = UDim2.new(0.5, -50, 0.5, -25)
        toggleButton.BackgroundColor3 = Color3.new(0, 0, 1)
        toggleButton.Text = "OFF"
        
        toggleButton.MouseButton1Click:Connect(function()
            toggleScript()
            toggleButton.Text = isScriptEnabled and "ON" or "OFF"
        end)
        
        while true do
            if isScriptEnabled then
                local args = {[1] = -1}
                game:GetService("ReplicatedStorage").Events.Remote.Client.changeRopeLength:FireServer(unpack(args))
                waitForMilliseconds(1) -- 1ms delay
            else
                RunService.Heartbeat:Wait() -- Prevent crashing when script is off
            end
        end
    end
})

-- Grapple Pull 2 Button
LoopScriptsSection:AddButton({
    Name = "Grapple Pull 2",
    Callback = function()
        local isScriptEnabled = false
        
        local function toggleScript()
            isScriptEnabled = not isScriptEnabled
        end
        
        -- GUI Setup for Grapple Pull 2
        local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
        gui.ResetOnSpawn = false -- Prevents the UI from resetting on player death
        local window = Instance.new("Frame", gui)
        window.Size = UDim2.new(0, 200, 0, 100)
        window.Position = UDim2.new(0, 10, 0, 10)
        window.BackgroundColor3 = Color3.new(0, 0, 0)
        window.Active = true
        window.Draggable = true
        
        local toggleButton = Instance.new("TextButton", window)
        toggleButton.Size = UDim2.new(0, 100, 0, 50)
        toggleButton.Position = UDim2.new(0.5, -50, 0.5, -25)
        toggleButton.BackgroundColor3 = Color3.new(0, 0, 1)
        toggleButton.Text = "OFF"
        
        toggleButton.MouseButton1Click:Connect(function()
            toggleScript()
            toggleButton.Text = isScriptEnabled and "ON" or "OFF"
        end)
        
        while true do
            if isScriptEnabled then
                local args = {[1] = 1}
                game:GetService("ReplicatedStorage").Events.Remote.Client.changeRopeLength:FireServer(unpack(args))
                waitForMilliseconds(1) -- 1ms delay
            else
                RunService.Heartbeat:Wait() -- Prevent crashing when script is off
            end
        end
    end
})

-- Additional Scripts Section
LoopScriptsSection:AddButton({
    Name = "FE Freeze",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SavaLava9/FEFreeze/main/FEFreeze.txt"))()
        print("FE Freeze executed")
    end
})

LoopScriptsSection:AddButton({
    Name = "Mobile Keyboard",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))()
        print("Mobile Keyboard executed")
    end
})

-- Ensure the GUI is created within PlayerGui, which will persist between respawns
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.ResetOnSpawn = false -- This prevents it from resetting on death

Window:Rebuild() -- This will persist the window and buttons
